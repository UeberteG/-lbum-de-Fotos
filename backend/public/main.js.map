{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport {PostService} from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'frontend';\n\n  public posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    public postService: PostService){}\n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent,{\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result)=> {\n        if(result){\n          this.postService.salvar(result.post, result.arquivo);\n        }\n      }\n    )\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n    <span>Projeto: Laravel + Angular</span>\r\n  </mat-toolbar>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\r\n  <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\r\n</div>\r\n\r\n\r\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\r\n    <mat-icon>add</mat-icon>\r\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatButtonModule} from '@angular/material/button'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n    \n  ],\n  providers: [],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  public nomearquivo: string = '';\n\n  public dados ={\n    post: new Post('','','','','',''),\n    arquivo: null\n  }\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n  changefile(event){\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu Nome\" [(ngModel)]=dados.post.nome>\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu Email\" [(ngModel)]=dados.post.email>\n            <mat-hint>Digite aqui seu Email</mat-hint>\n        </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da Mensagem\" [(ngModel)]=dados.post.titulo>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtítulo da Mensagem\" [(ngModel)]=dados.post.subtitulo>\n        </mat-form-field>\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=dados.post.mensagem></textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none\" (change)=\"changefile($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma Foto\n</button>\n<p *ngIf=\"nomearquivo!=''\">\n    <strong>Arquivo: </strong>\n     {{nomearquivo}} <mat-icon color=\"primary\">done</mat-icon></p>\n\n<br><br>\n\n<div style=\"text-align: center\">\n <button mat-button color=\"primary\" (click)='salvar()'>OK</button>\n <button mat-button color=\"warn\" (click)='cancelar()'>Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get('/api/').subscribe(\n      (posts: any[]) => {\n        for(let p of posts){\n          this.posts.push(\n            new Post(\n              p.nome, p.titulo, p.subtitulo,\n              p.email, p.mensagem, p.arquivo,\n              p.id, p.likes)\n          )\n        }\n      }\n    );\n  }\n\n  salvar(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post('/api', uploadData,{\n      reportProgress: true,\n      observe: 'events'\n    })\n      .subscribe((event: any)=>{\n        if(event.type == HttpEventType.Response){\n          let p: any = event.body;\n\n          this.posts.push(\n            new Post(\n              p.nome, p.titulo, p.subtitulo,\n              p.email, p.mensagem, p.arquivo,\n              p.id, p.likes)\n          )\n        }\n\n        if(event.type == HttpEventType.UploadProgress){\n          console.log('UploadProgress');\n          console.log(event);\n        }\n      });\n  }\n\n  like(id: number){\n    this.http.get('/api/like/'+id)\n    .subscribe(\n      (event:any) =>{\n        let p = this.posts.find((p) => p.id == id);\n        p.likes = event.likes;\n      }\n    )\n  }\n  apagar(id: number){\n    this.http.delete('/api/'+id)\n    .subscribe((event) =>{\n      let i = this.posts.findIndex((p)=> p.id ==id);\n      if(i>=0){\n        this.posts.splice(i,1);\n      }\n    });\n  }\n}\n","export class Post {\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ){}\r\n}\r\n\r\nnew Post('nome', 'titulo', 'subtitulo', 'email', 'mensagem', 'arquivo', 1, 2)","import { Component, OnInit, Input } from '@angular/core';\nimport {Post} from '../post';\nimport { PostService } from '../post.service';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(\n    private postService: PostService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  apagar(){\n    this.postService.apagar(this.post.id);\n  }\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color=\"primary\" (click)=\"like()\">LIKE</button>\n      <button mat-button color=\"accent\" (click)='apagar()'>APAGAR</button>\n      <mat-icon color=\"warn\" *ngIf=\"post.likes>0\" [matBadge]=\"post.likes\" \n        matBadgePosition=\"above after\" matBadgeColor=\"warn\"\n        matBadgeOverlap=\"false\">favorite</mat-icon>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}